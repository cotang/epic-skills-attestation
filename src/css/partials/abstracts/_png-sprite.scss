/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-arrow-next-name: 's-arrow-next';
$s-arrow-next-x: 71px;
$s-arrow-next-y: 0px;
$s-arrow-next-offset-x: -71px;
$s-arrow-next-offset-y: 0px;
$s-arrow-next-width: 48px;
$s-arrow-next-height: 48px;
$s-arrow-next-total-width: 167px;
$s-arrow-next-total-height: 150px;
$s-arrow-next-image: '../img/png-sprite.png';
$s-arrow-next: (71px, 0px, -71px, 0px, 48px, 48px, 167px, 150px, '../img/png-sprite.png', 's-arrow-next', );
$s-fact-extreme-name: 's-fact-extreme';
$s-fact-extreme-x: 121px;
$s-fact-extreme-y: 0px;
$s-fact-extreme-offset-x: -121px;
$s-fact-extreme-offset-y: 0px;
$s-fact-extreme-width: 46px;
$s-fact-extreme-height: 48px;
$s-fact-extreme-total-width: 167px;
$s-fact-extreme-total-height: 150px;
$s-fact-extreme-image: '../img/png-sprite.png';
$s-fact-extreme: (121px, 0px, -121px, 0px, 46px, 48px, 167px, 150px, '../img/png-sprite.png', 's-fact-extreme', );
$s-fact-romantic-name: 's-fact-romantic';
$s-fact-romantic-x: 0px;
$s-fact-romantic-y: 106px;
$s-fact-romantic-offset-x: 0px;
$s-fact-romantic-offset-y: -106px;
$s-fact-romantic-width: 48px;
$s-fact-romantic-height: 44px;
$s-fact-romantic-total-width: 167px;
$s-fact-romantic-total-height: 150px;
$s-fact-romantic-image: '../img/png-sprite.png';
$s-fact-romantic: (0px, 106px, 0px, -106px, 48px, 44px, 167px, 150px, '../img/png-sprite.png', 's-fact-romantic', );
$s-fact-safe-name: 's-fact-safe';
$s-fact-safe-x: 71px;
$s-fact-safe-y: 50px;
$s-fact-safe-offset-x: -71px;
$s-fact-safe-offset-y: -50px;
$s-fact-safe-width: 48px;
$s-fact-safe-height: 48px;
$s-fact-safe-total-width: 167px;
$s-fact-safe-total-height: 150px;
$s-fact-safe-image: '../img/png-sprite.png';
$s-fact-safe: (71px, 50px, -71px, -50px, 48px, 48px, 167px, 150px, '../img/png-sprite.png', 's-fact-safe', );
$s-offer-gift-name: 's-offer-gift';
$s-offer-gift-x: 0px;
$s-offer-gift-y: 49px;
$s-offer-gift-offset-x: 0px;
$s-offer-gift-offset-y: -49px;
$s-offer-gift-width: 57px;
$s-offer-gift-height: 55px;
$s-offer-gift-total-width: 167px;
$s-offer-gift-total-height: 150px;
$s-offer-gift-image: '../img/png-sprite.png';
$s-offer-gift: (0px, 49px, 0px, -49px, 57px, 55px, 167px, 150px, '../img/png-sprite.png', 's-offer-gift', );
$s-offer-school-name: 's-offer-school';
$s-offer-school-x: 0px;
$s-offer-school-y: 0px;
$s-offer-school-offset-x: 0px;
$s-offer-school-offset-y: 0px;
$s-offer-school-width: 69px;
$s-offer-school-height: 47px;
$s-offer-school-total-width: 167px;
$s-offer-school-total-height: 150px;
$s-offer-school-image: '../img/png-sprite.png';
$s-offer-school: (0px, 0px, 0px, 0px, 69px, 47px, 167px, 150px, '../img/png-sprite.png', 's-offer-school', );
$s-pin-black-name: 's-pin-black';
$s-pin-black-x: 121px;
$s-pin-black-y: 50px;
$s-pin-black-offset-x: -121px;
$s-pin-black-offset-y: -50px;
$s-pin-black-width: 14px;
$s-pin-black-height: 20px;
$s-pin-black-total-width: 167px;
$s-pin-black-total-height: 150px;
$s-pin-black-image: '../img/png-sprite.png';
$s-pin-black: (121px, 50px, -121px, -50px, 14px, 20px, 167px, 150px, '../img/png-sprite.png', 's-pin-black', );
$s-pin-blue-name: 's-pin-blue';
$s-pin-blue-x: 155px;
$s-pin-blue-y: 50px;
$s-pin-blue-offset-x: -155px;
$s-pin-blue-offset-y: -50px;
$s-pin-blue-width: 12px;
$s-pin-blue-height: 16px;
$s-pin-blue-total-width: 167px;
$s-pin-blue-total-height: 150px;
$s-pin-blue-image: '../img/png-sprite.png';
$s-pin-blue: (155px, 50px, -155px, -50px, 12px, 16px, 167px, 150px, '../img/png-sprite.png', 's-pin-blue', );
$s-route-name: 's-route';
$s-route-x: 137px;
$s-route-y: 50px;
$s-route-offset-x: -137px;
$s-route-offset-y: -50px;
$s-route-width: 16px;
$s-route-height: 16px;
$s-route-total-width: 167px;
$s-route-total-height: 150px;
$s-route-image: '../img/png-sprite.png';
$s-route: (137px, 50px, -137px, -50px, 16px, 16px, 167px, 150px, '../img/png-sprite.png', 's-route', );
$s-tel-name: 's-tel';
$s-tel-x: 139px;
$s-tel-y: 72px;
$s-tel-offset-x: -139px;
$s-tel-offset-y: -72px;
$s-tel-width: 14px;
$s-tel-height: 14px;
$s-tel-total-width: 167px;
$s-tel-total-height: 150px;
$s-tel-image: '../img/png-sprite.png';
$s-tel: (139px, 72px, -139px, -72px, 14px, 14px, 167px, 150px, '../img/png-sprite.png', 's-tel', );
$s-time-name: 's-time';
$s-time-x: 121px;
$s-time-y: 72px;
$s-time-offset-x: -121px;
$s-time-offset-y: -72px;
$s-time-width: 16px;
$s-time-height: 16px;
$s-time-total-width: 167px;
$s-time-total-height: 150px;
$s-time-image: '../img/png-sprite.png';
$s-time: (121px, 72px, -121px, -72px, 16px, 16px, 167px, 150px, '../img/png-sprite.png', 's-time', );
$spritesheet-width: 167px;
$spritesheet-height: 150px;
$spritesheet-image: '../img/png-sprite.png';
$spritesheet-sprites: ($s-arrow-next, $s-fact-extreme, $s-fact-romantic, $s-fact-safe, $s-offer-gift, $s-offer-school, $s-pin-black, $s-pin-blue, $s-route, $s-tel, $s-time, );
$spritesheet: (167px, 150px, '../img/png-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
